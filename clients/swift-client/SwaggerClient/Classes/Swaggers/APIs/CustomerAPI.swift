//
// CustomerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CustomerAPI: APIBase {
    /**
     Create a new customer
     
     - parameter body: (body) The customer data to store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createCustomer(body body: CreateCustomerRequest, completion: ((data: Customer?, error: ErrorType?) -> Void)) {
        createCustomerWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new customer
     - PUT /customer
     - Stores a new customer in the database. Will generate a random id, unless provided with one.\n
     - API Key:
       - type: apiKey api_key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "created" : "2000-01-23T04:56:07.000+0000",
  "name" : "aeiou",
  "id" : "aeiou",
  "accounts" : [ {
    "number" : "aeiou",
    "amount" : 1.3579000000000001069366817318950779736042022705078125,
    "name" : "aeiou",
    "ownerId" : "aeiou"
  } ]
}}]
     
     - parameter body: (body) The customer data to store 

     - returns: RequestBuilder<Customer> 
     */
    public class func createCustomerWithRequestBuilder(body body: CreateCustomerRequest) -> RequestBuilder<Customer> {
        let path = "/customer"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<Customer>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     Get customer data
     
     - parameter customerId: (path) The customer id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCustomer(customerId customerId: String, completion: ((data: Customer?, error: ErrorType?) -> Void)) {
        getCustomerWithRequestBuilder(customerId: customerId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get customer data
     - GET /customer/{customerId}
     - Shows customer data by their ID\n
     - API Key:
       - type: apiKey api_key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "created" : "2000-01-23T04:56:07.000+0000",
  "name" : "aeiou",
  "id" : "aeiou",
  "accounts" : [ {
    "number" : "aeiou",
    "amount" : 1.3579000000000001069366817318950779736042022705078125,
    "name" : "aeiou",
    "ownerId" : "aeiou"
  } ]
}}]
     
     - parameter customerId: (path) The customer id 

     - returns: RequestBuilder<Customer> 
     */
    public class func getCustomerWithRequestBuilder(customerId customerId: String) -> RequestBuilder<Customer> {
        var path = "/customer/{customerId}"
        path = path.stringByReplacingOccurrencesOfString("{customerId}", withString: "\(customerId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Customer>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
