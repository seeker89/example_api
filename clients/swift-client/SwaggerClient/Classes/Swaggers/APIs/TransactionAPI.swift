//
// TransactionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class TransactionAPI: APIBase {
    /**
     Make a new transfer
     
     - parameter body: (body) The accounts to make the transfer between 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createTransfer(body body: CreateTransferRequest, completion: ((data: Transaction?, error: ErrorType?) -> Void)) {
        createTransferWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Make a new transfer
     - PUT /transfer
     - Makes a new transfer. It should do some kind of complex validation about whether the originating account has enough money on it, can do overdraft, credit, etc.\n
     - API Key:
       - type: apiKey api_key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "amount" : 1.3579000000000001069366817318950779736042022705078125,
  "executedAt" : "2000-01-23T04:56:07.000+0000",
  "origin" : {
    "number" : "aeiou"
  },
  "destination" : ""
}}]
     
     - parameter body: (body) The accounts to make the transfer between 

     - returns: RequestBuilder<Transaction> 
     */
    public class func createTransferWithRequestBuilder(body body: CreateTransferRequest) -> RequestBuilder<Transaction> {
        let path = "/transfer"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<Transaction>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     Get account transactions history
     
     - parameter accountId: (path) The account id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccountHistory(accountId accountId: String, completion: ((data: TransactionArray?, error: ErrorType?) -> Void)) {
        getAccountHistoryWithRequestBuilder(accountId: accountId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get account transactions history
     - GET /account/history/{accountId}
     - Shows all transactions for the account in question.\n
     - API Key:
       - type: apiKey api_key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "transactions" : [ {
    "amount" : 1.3579000000000001069366817318950779736042022705078125,
    "executedAt" : "2000-01-23T04:56:07.000+0000",
    "origin" : {
      "number" : "aeiou"
    },
    "destination" : ""
  } ]
}}]
     
     - parameter accountId: (path) The account id 

     - returns: RequestBuilder<TransactionArray> 
     */
    public class func getAccountHistoryWithRequestBuilder(accountId accountId: String) -> RequestBuilder<TransactionArray> {
        var path = "/account/history/{accountId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<TransactionArray>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
